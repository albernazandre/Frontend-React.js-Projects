{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybetunes/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUser } from '../services/userAPI';\nimport Charging from './Charging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      // valor que irá no input do login\n      buttonDisabled: true,\n      // o botao na page de login começa desabilitado\n      loading: false // até que se clique, loading é false\n    };\n    this.loginValue = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        value,\n        name\n      } = target;\n      this.setState({\n        [name]: value\n      }, this.validateBtn(value)); // dê ao array de keys name os respectivos 'value'\n    };\n    this.validateBtn = loginValue => {\n      const minLength = 3;\n      if (loginValue.length >= minLength) {\n        this.setState({\n          buttonDisabled: ''\n        });\n      } else {\n        this.setState({\n          buttonDisabled: true\n        });\n      }\n    };\n  }\n  render() {\n    const {\n      name,\n      buttonDisabled,\n      loading\n    } = this.state; // capturando as keys de state declaradas acima\n    const {\n      history\n    } = this.props; // declarando o objeto que contem o historico da rota\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          // valor do input name é a key name\n          type: \"text\",\n          id: \"name\",\n          name: \"name\" // name recebe name\n          ,\n          \"data-testid\": \"login-name-input\",\n          onChange: this.loginValue // apos mudança, execute a funcao loginValue\n          ,\n          value: name // valor vem da key name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"login-submit-button\",\n          disabled: buttonDisabled // o botao esta habilitado a depender da key buttondisabled\n          ,\n          onClick: async () => {\n            // setando o Loading\n            this.setState({\n              loading: true\n            });\n            await createUser({\n              name\n            }); // esperar a criação do usuario\n            history.push('/search'); // apos carregado salve o nome e envie para a rota search\n          },\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(Charging, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 27\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nLogin.propTypes = {\n  history: PropTypes.shape({\n    // shape (formato) indica a forma que queremos criar\n    push: PropTypes.func.isRequired // push e do tipo funcao\n  }).isRequired // history isRequired\n};\n\nexport default Login;","map":{"version":3,"names":["React","PropTypes","createUser","Charging","Login","Component","state","name","buttonDisabled","loading","loginValue","target","value","setState","validateBtn","minLength","length","render","history","props","push","propTypes","shape","func","isRequired"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybetunes/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUser } from '../services/userAPI';\nimport Charging from './Charging';\n\nclass Login extends React.Component {\n  state = {\n    name: '', // valor que irá no input do login\n    buttonDisabled: true, // o botao na page de login começa desabilitado\n    loading: false, // até que se clique, loading é false\n  };\n\n  loginValue = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value }, this.validateBtn(value)); // dê ao array de keys name os respectivos 'value'\n  }; // este segundo param em setState é uma callback da funcao validateBtn, ou seja, ela sera executada novamente com o novo valor de state\n\n  // funcao que faz com que botao seja habilitado ou desabilitado a depender da quantid de caracteres\n  validateBtn = (loginValue) => {\n    const minLength = 3;\n    if (loginValue.length >= minLength) {\n      this.setState({ buttonDisabled: '' });\n    } else {\n      this.setState({ buttonDisabled: true });\n    }\n  };\n\n  render() {\n    const { name, buttonDisabled, loading } = this.state; // capturando as keys de state declaradas acima\n    const { history } = this.props; // declarando o objeto que contem o historico da rota\n\n    return (\n      <div data-testid=\"page-login\">\n        <form>\n          <input // valor do input name é a key name\n            type=\"text\"\n            id=\"name\"\n            name=\"name\" // name recebe name\n            data-testid=\"login-name-input\"\n            onChange={ this.loginValue } // apos mudança, execute a funcao loginValue\n            value={ name } // valor vem da key name\n          />\n          <button\n            data-testid=\"login-submit-button\"\n            disabled={ buttonDisabled } // o botao esta habilitado a depender da key buttondisabled\n            onClick={ async () => { // setando o Loading\n              this.setState({ loading: true });\n              await createUser({ name }); // esperar a criação do usuario\n              history.push('/search'); // apos carregado salve o nome e envie para a rota search\n            } }\n          >\n            Entrar\n          </button>\n        </form>\n        <span>{ loading ? <Charging /> : '' }</span>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({ // shape (formato) indica a forma que queremos criar\n    push: PropTypes.func.isRequired, // push e do tipo funcao\n  }).isRequired, // history isRequired\n};\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,KAAK,SAASJ,KAAK,CAACK,SAAS,CAAC;EAAA;IAAA;IAAA,KAClCC,KAAK,GAAG;MACNC,IAAI,EAAE,EAAE;MAAE;MACVC,cAAc,EAAE,IAAI;MAAE;MACtBC,OAAO,EAAE,KAAK,CAAE;IAClB,CAAC;IAAA,KAEDC,UAAU,GAAG,QAAgB;MAAA,IAAf;QAAEC;MAAO,CAAC;MACtB,MAAM;QAAEC,KAAK;QAAEL;MAAK,CAAC,GAAGI,MAAM;MAC9B,IAAI,CAACE,QAAQ,CAAC;QAAE,CAACN,IAAI,GAAGK;MAAM,CAAC,EAAE,IAAI,CAACE,WAAW,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IAAA,KAGDE,WAAW,GAAIJ,UAAU,IAAK;MAC5B,MAAMK,SAAS,GAAG,CAAC;MACnB,IAAIL,UAAU,CAACM,MAAM,IAAID,SAAS,EAAE;QAClC,IAAI,CAACF,QAAQ,CAAC;UAAEL,cAAc,EAAE;QAAG,CAAC,CAAC;MACvC,CAAC,MAAM;QACL,IAAI,CAACK,QAAQ,CAAC;UAAEL,cAAc,EAAE;QAAK,CAAC,CAAC;MACzC;IACF,CAAC;EAAA;EAEDS,MAAM,GAAG;IACP,MAAM;MAAEV,IAAI;MAAEC,cAAc;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACH,KAAK,CAAC,CAAC;IACtD,MAAM;MAAEY;IAAQ,CAAC,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;;IAEhC,oBACE;MAAK,eAAY,YAAY;MAAA,wBAC3B;QAAA,wBACE;UAAO;UACL,IAAI,EAAC,MAAM;UACX,EAAE,EAAC,MAAM;UACT,IAAI,EAAC,MAAM,CAAC;UAAA;UACZ,eAAY,kBAAkB;UAC9B,QAAQ,EAAG,IAAI,CAACT,UAAY,CAAC;UAAA;UAC7B,KAAK,EAAGH,IAAM,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACf,eACF;UACE,eAAY,qBAAqB;UACjC,QAAQ,EAAGC,cAAgB,CAAC;UAAA;UAC5B,OAAO,EAAG,YAAY;YAAE;YACtB,IAAI,CAACK,QAAQ,CAAC;cAAEJ,OAAO,EAAE;YAAK,CAAC,CAAC;YAChC,MAAMP,UAAU,CAAC;cAAEK;YAAK,CAAC,CAAC,CAAC,CAAC;YAC5BW,OAAO,CAACE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;UAC3B,CAAG;UAAA,UACJ;QAED;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eACP;QAAA,UAAQX,OAAO,gBAAG,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,GAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACxC;EAEV;AACF;AAEAL,KAAK,CAACiB,SAAS,GAAG;EAChBH,OAAO,EAAEjB,SAAS,CAACqB,KAAK,CAAC;IAAE;IACzBF,IAAI,EAAEnB,SAAS,CAACsB,IAAI,CAACC,UAAU,CAAE;EACnC,CAAC,CAAC,CAACA,UAAU,CAAE;AACjB,CAAC;;AAED,eAAepB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}