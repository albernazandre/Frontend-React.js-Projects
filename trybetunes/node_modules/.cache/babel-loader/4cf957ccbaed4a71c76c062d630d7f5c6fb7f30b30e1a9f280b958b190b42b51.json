{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybetunes/src/pages/Search.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport searchAlbumApi from '../services/searchAlbumsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Search extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      search: '',\n      buttonDisabled: true,\n      musics: '',\n      result: '',\n      validation: false\n    };\n    this.searchValue = _ref => {\n      let {\n        target\n      } = _ref;\n      // funcao que passa valores para o estado\n      const {\n        value,\n        name\n      } = target;\n      this.setState({\n        [name]: value\n      }, this.validateBtn(value)); // dê ao array de keys name os respectivos 'value'\n    };\n    this.validateBtn = searchValue => {\n      // funcao que valida botao de pesquisa, tamanho minimo da palavra de 2 caracteres\n      const minLength = 2;\n      if (searchValue.length >= minLength) {\n        this.setState({\n          buttonDisabled: ''\n        });\n      } else {\n        this.setState({\n          buttonDisabled: true\n        });\n      }\n    };\n    this.searchingMus = async () => {\n      const {\n        search\n      } = this.state;\n      const arrCds = await searchAlbumApi(search); // espere fazer a pesquisa. o array de albums virá atraves do parametro passado para a funcao que pesquisa os discos por meio do artista passado\n      if (arrCds.length === 0) this.setState({\n        musics: ''\n      }); // se o array de albums for igual 0, não ha musicas\n      if (arrCds.length > 0) this.setState({\n        musics: arrCds\n      }); // se houver albums, musics recebe o array de cds\n      this.setState({\n        result: search,\n        search: '',\n        validation: true\n      });\n    };\n    this.musicArray = () => {\n      const {\n        musics\n      } = this.state;\n      return musics.map(album =>\n      /*#__PURE__*/\n      // acessando as keys da api e criando novo array\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: album.collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/album/${album.collectionId}`,\n          \"data-testid\": `link-to-album-${album.collectionId}` // criando link ate a musica\n          ,\n          children: \"Sobre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, album.collectionName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this));\n    };\n  }\n  render() {\n    const {\n      search,\n      buttonDisabled,\n      musics,\n      result,\n      validation\n    } = this.state;\n    const myMusics = musics ?\n    /*#__PURE__*/\n    // se music existir retorne albums ou se nao, retorne \"Nenhum album foi encont\"\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `Resultado de álbuns de: ${result}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), this.musicArray()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nenhum \\xE1lbum foi encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-search\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          name: \"search\",\n          onChange: this.searchValue,\n          \"data-testid\": \"search-artist-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: buttonDisabled,\n          \"data-testid\": \"search-artist-button\",\n          onClick: this.searchingMus // quando clicar execute searchingMus\n          ,\n          children: \"Pesquisar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: validation ? myMusics : '' /* retorne as musicas encontradas ou que nenhm */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Search;","map":{"version":3,"names":["React","Link","Header","searchAlbumApi","Search","Component","state","search","buttonDisabled","musics","result","validation","searchValue","target","value","name","setState","validateBtn","minLength","length","searchingMus","arrCds","musicArray","map","album","collectionName","collectionId","render","myMusics"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybetunes/src/pages/Search.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport searchAlbumApi from '../services/searchAlbumsAPI';\n\nclass Search extends React.Component {\n  state = {\n    search: '',\n    buttonDisabled: true,\n    musics: '',\n    result: '',\n    validation: false,\n  };\n\n  searchValue = ({ target }) => { // funcao que passa valores para o estado\n    const { value, name } = target;\n    this.setState({ [name]: value }, this.validateBtn(value));// dê ao array de keys name os respectivos 'value'\n  }; // este segundo param em setState é uma callback da funcao validateBtn, ou seja, ela sera executada novamente com o novo valor de state\n\n  validateBtn = (searchValue) => { // funcao que valida botao de pesquisa, tamanho minimo da palavra de 2 caracteres\n    const minLength = 2;\n    if (searchValue.length >= minLength) {\n      this.setState({ buttonDisabled: '' });\n    } else {\n      this.setState({ buttonDisabled: true });\n    }\n  };\n\n  searchingMus = async () => {\n    const { search } = this.state;\n    const arrCds = await searchAlbumApi(search); // espere fazer a pesquisa. o array de albums virá atraves do parametro passado para a funcao que pesquisa os discos por meio do artista passado\n    if (arrCds.length === 0) this.setState({ musics: '' }); // se o array de albums for igual 0, não ha musicas\n    if (arrCds.length > 0) this.setState({ musics: arrCds }); // se houver albums, musics recebe o array de cds\n    this.setState({ result: search, search: '', validation: true });\n  };\n\n  musicArray = () => {\n    const { musics } = this.state;\n    return musics\n      .map((album) => ( // acessando as keys da api e criando novo array\n        <div key={ album.collectionName }>\n          <p>\n            {album.collectionName}\n          </p>\n          <Link\n            to={ `/album/${album.collectionId}` }\n            data-testid={ `link-to-album-${album.collectionId}` } // criando link ate a musica\n          >\n            Sobre\n          </Link>\n        </div>));\n  };\n\n  render() {\n    const { search, buttonDisabled, musics, result, validation } = this.state;\n    const myMusics = musics ? ( // se music existir retorne albums ou se nao, retorne \"Nenhum album foi encont\"\n      <div>\n        <h3>{`Resultado de álbuns de: ${result}`}</h3>\n        {this.musicArray()}\n      </div>) : <p>Nenhum álbum foi encontrado</p>;\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        <form>\n          <input\n            value={ search }\n            name=\"search\"\n            onChange={ this.searchValue }\n            data-testid=\"search-artist-input\"\n          />\n          <button\n            disabled={ buttonDisabled }\n            data-testid=\"search-artist-button\"\n            onClick={ this.searchingMus } // quando clicar execute searchingMus\n          >\n            Pesquisar\n          </button>\n        </form>\n        <div>\n          { validation ? myMusics : '' /* retorne as musicas encontradas ou que nenhm */ }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}