{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-starwars-planets-search/src/components/Form.jsx\",\n  _s = $RefreshSig$();\n// formulario de filtro dos planetas\n\nimport { useContext, useRef } from 'react';\nimport { contextApp } from '../context/ContextApp';\nimport Filters from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  // O useRef é um gancho que permite criar diretamente uma referência\n  // ao elemento DOM no componente funcional\n  const planet = useRef(null); // valor inicial do estado é nulo\n  const column = useRef(null);\n  const operator = useRef(null);\n  const value = useRef(null);\n  const {\n    filteredPlanet,\n    planetData,\n    setFilteredPlanet,\n    filters,\n    setFilters\n  } = useContext(contextApp);\n\n  // funcao que faz a filtragem dos planetas a partir do texto\n  // colocado no filtro\n  const handleFilterPlanet = () => {\n    const planData = planetData.filter(plan => plan.name.includes(planet.current.value));\n    setFilteredPlanet(planData);\n  };\n\n  // funcao que ativa os filtros\n  // consiste em filtrar valores igual, menor ou maior que o numeral passado como\n  // parametro para por exemplo, diameter, orbital period, population, etc...\n  const handleFilterAll = event => {\n    event.preventDefault();\n    const valueColumn = column.current.value;\n    const valueOperator = operator.current.value;\n    const valueInput = Number(value.current.value);\n    setFilters([...filters, {\n      columnValue,\n      operatorValue,\n      inputValue\n    }]);\n    let myFilter;\n    if (valueOperator === 'igual a') {\n      myFilter = filteredPlanet.filter(planeta => Number(planeta[valueColumn]) === valueInput);\n    } else if (valueOperator === 'menor que') {\n      myFilter = filteredPlanet.filter(planeta => planeta[valueColumn] < valueInput);\n    } else {\n      myFilter = filteredPlanet.filter(planeta => planeta[valueColumn] > valueInput);\n    }\n    setFilteredPlanet(myFilter);\n  };\n  const allFilterRemoved = event => {\n    event.preventDefault();\n    setFilters([]);\n    setFilteredPlanet(planetData);\n  };\n\n  // funcao que carrega filtros selecionados\n  // exemplo: criei um filtro de populacao e outro de diametro do planeta\n  // veremos os dois filtro serem carregados e os resultados virao destes dois filtros selecionados\n  const filtersInColumn = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  let onlyFilters = filtersInColumn;\n  if (filters.length > 0) {\n    onlyFilters = filtersInColumn.filter(filteredColumn => !filters.some(f => f.valueColumn.includes(filteredColumn)));\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: planet,\n        onChange: handleFilterPlanet,\n        \"data-testid\": \"name-filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Column\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"column-filter\",\n          ref: column,\n          children: onlyFilters.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: f,\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Operator\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"comparison-filter\",\n          ref: operator,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"maior que\",\n            children: \"maior que\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"menor que\",\n            children: \"menor que\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"igual a\",\n            children: \"igual a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        \"data-testid\": \"value-filter\",\n        ref: value,\n        defaultValue: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilterAll,\n        \"data-testid\": \"button-filter\",\n        children: \"FILTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: allFilterRemoved,\n        \"data-testid\": \"button-remove-filters\",\n        children: \"FILTER REMOVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), filters && /*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"FKQRtYdMLiTVAic7qhn7GwC6sCA=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useContext","useRef","contextApp","Filters","Form","planet","column","operator","value","filteredPlanet","planetData","setFilteredPlanet","filters","setFilters","handleFilterPlanet","planData","filter","plan","name","includes","current","handleFilterAll","event","preventDefault","valueColumn","valueOperator","valueInput","Number","columnValue","operatorValue","inputValue","myFilter","planeta","allFilterRemoved","filtersInColumn","onlyFilters","length","filteredColumn","some","f","map"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-starwars-planets-search/src/components/Form.jsx"],"sourcesContent":["// formulario de filtro dos planetas\n\nimport { useContext, useRef } from 'react';\nimport { contextApp } from '../context/ContextApp';\nimport Filters from './Filter';\n\nexport default function Form() {\n  // O useRef é um gancho que permite criar diretamente uma referência\n  // ao elemento DOM no componente funcional\n  const planet = useRef(null); // valor inicial do estado é nulo\n  const column = useRef(null);\n  const operator = useRef(null);\n  const value = useRef(null);\n\n  const {\n    filteredPlanet,\n    planetData,\n    setFilteredPlanet,\n    filters,\n    setFilters,\n  } = useContext(contextApp);\n\n  // funcao que faz a filtragem dos planetas a partir do texto\n  // colocado no filtro\n  const handleFilterPlanet = () => {\n    const planData = planetData\n      .filter((plan) => plan.name.includes(planet.current.value));\n    setFilteredPlanet(planData);\n  };\n\n  // funcao que ativa os filtros\n  // consiste em filtrar valores igual, menor ou maior que o numeral passado como\n  // parametro para por exemplo, diameter, orbital period, population, etc...\n  const handleFilterAll = (event) => {\n    event.preventDefault();\n    const valueColumn = column.current.value;\n    const valueOperator = operator.current.value;\n    const valueInput = Number(value.current.value);\n    setFilters([...filters, { columnValue, operatorValue, inputValue }]);\n    let myFilter;\n    if (valueOperator === 'igual a') {\n      myFilter = filteredPlanet\n        .filter((planeta) => Number(planeta[valueColumn]) === valueInput);\n    } else if (valueOperator === 'menor que') {\n      myFilter = filteredPlanet.filter((planeta) => planeta[valueColumn] < valueInput);\n    } else {\n      myFilter = filteredPlanet.filter((planeta) => planeta[valueColumn] > valueInput);\n    }\n    setFilteredPlanet(myFilter);\n  };\n\n  const allFilterRemoved = (event) => {\n    event.preventDefault();\n    setFilters([]);\n    setFilteredPlanet(planetData);\n  };\n\n  // funcao que carrega filtros selecionados\n  // exemplo: criei um filtro de populacao e outro de diametro do planeta\n  // veremos os dois filtro serem carregados e os resultados virao destes dois filtros selecionados\n  const filtersInColumn = [\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ];\n  let onlyFilters = filtersInColumn;\n  if (filters.length > 0) {\n    onlyFilters = filtersInColumn\n      .filter((filteredColumn) => !filters\n        .some((f) => f.valueColumn.includes(filteredColumn)));\n  }\n\n  return (\n    <form>\n      <div>\n        <input\n          type=\"text\"\n          ref={ planet }\n          onChange={ handleFilterPlanet }\n          data-testid=\"name-filter\"\n        />\n      </div>\n      <div>\n        <label>\n          Column\n          <select data-testid=\"column-filter\" ref={ column }>\n            {onlyFilters.map((f) => (\n              <option\n                key={ f }\n                value={ f }\n              >\n                {f}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Operator\n          <select data-testid=\"comparison-filter\" ref={ operator }>\n            <option value=\"maior que\">maior que</option>\n            <option value=\"menor que\">menor que</option>\n            <option value=\"igual a\">igual a</option>\n          </select>\n        </label>\n        <input type=\"number\" data-testid=\"value-filter\" ref={ value } defaultValue=\"0\" />\n        <button\n          onClick={ handleFilterAll }\n          data-testid=\"button-filter\"\n        >\n          FILTER\n        </button>\n        <button\n          onClick={ allFilterRemoved }\n          data-testid=\"button-remove-filters\"\n        >\n          FILTER REMOVE\n        </button>\n      </div>\n      {filters && <Filters />}\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}