{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-starwars-planets-search/src/components/Form.jsx\",\n  _s = $RefreshSig$();\n// formulario de filtro dos planetas\n\nimport { useContext, useRef } from 'react';\nimport { contextApp } from '../context/ContextApp';\nimport Filters from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  // O useRef é um gancho que permite criar diretamente uma referência\n  // ao elemento DOM no componente funcional\n  const planet = useRef(null); // valor inicial do estado é nulo\n  const column = useRef(null);\n  const operator = useRef(null);\n  const value = useRef(null);\n  const {\n    filteredPlanet,\n    setFilteredPlanet,\n    filters,\n    setFilters\n  } = useContext(movieContext);\n\n  // funcao que faz a filtragem dos planetas a partir do texto\n  // colocado no filtro\n  const handleFilterPlanet = () => {\n    const planData = filteredPlanet.filter(plan => plan.name.includes(planet.current.value));\n    setFilteredPlanet(planData);\n  };\n\n  // funcao que ativa os filtros\n  // consiste em filtrar valores igual, menor ou maior que o numeral passado como\n  // parametro para por exemplo, diameter, orbital period, population, etc...\n  const handleFilterAll = event => {\n    event.preventDefault();\n    const valueColumn = column.current.value;\n    const valueOperator = operator.current.value;\n    const valueInput = Number(value.current.value);\n    setFilters([...filters, `${valueColumn} ${valueOperator} ${valueInput}`]);\n    let myFilter;\n    if (valueOperator === 'equal to') {\n      myFilter = filteredPlanet.filter(planeta => Number(planeta[valueColumn]) === valueInput);\n    } else if (valueOperator === 'less than') {\n      myFilter = filteredPlanet.filter(planeta => planeta[valueColumn] < valueInput);\n    } else {\n      myFilter = filteredPlanet.filter(planeta => planeta[valueColumn] > valueInput);\n    }\n    setFilteredPlanet(myFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: planet,\n        onChange: handleFilterPlanet,\n        \"data-testid\": \"name-filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Column\", /*#__PURE__*/_jsxDEV(\"select\", {\n          \"data-testid\": \"column-filter\",\n          ref: column,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"population\",\n            children: \"population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"orbital_period\",\n            children: \"orbital_period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"diameter\",\n            children: \"diameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rotation_period\",\n            children: \"rotation_period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"surface_water\",\n            children: \"surface_water\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Operator\", /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"less than\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"more than\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"equal to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"FILTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"/CGIL+HzbKBrrhUbyCVLeIdv11Q=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useContext","useRef","contextApp","Filters","Form","planet","column","operator","value","filteredPlanet","setFilteredPlanet","filters","setFilters","movieContext","handleFilterPlanet","planData","filter","plan","name","includes","current","handleFilterAll","event","preventDefault","valueColumn","valueOperator","valueInput","Number","myFilter","planeta"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-starwars-planets-search/src/components/Form.jsx"],"sourcesContent":["// formulario de filtro dos planetas\n\nimport { useContext, useRef } from 'react';\nimport { contextApp } from '../context/ContextApp';\nimport Filters from './Filter';\n\nexport default function Form() {\n  // O useRef é um gancho que permite criar diretamente uma referência\n  // ao elemento DOM no componente funcional\n  const planet = useRef(null); // valor inicial do estado é nulo\n  const column = useRef(null);\n  const operator = useRef(null);\n  const value = useRef(null);\n\n  const {\n    filteredPlanet,\n    setFilteredPlanet,\n    filters,\n    setFilters,\n  } = useContext(movieContext);\n\n  // funcao que faz a filtragem dos planetas a partir do texto\n  // colocado no filtro\n  const handleFilterPlanet = () => {\n    const planData = filteredPlanet\n      .filter((plan) => plan.name.includes(planet.current.value));\n    setFilteredPlanet(planData);\n  };\n\n  // funcao que ativa os filtros\n  // consiste em filtrar valores igual, menor ou maior que o numeral passado como\n  // parametro para por exemplo, diameter, orbital period, population, etc...\n  const handleFilterAll = (event) => {\n    event.preventDefault();\n    const valueColumn = column.current.value;\n    const valueOperator = operator.current.value;\n    const valueInput = Number(value.current.value);\n    setFilters([...filters, `${valueColumn} ${valueOperator} ${valueInput}`]);\n    let myFilter;\n    if (valueOperator === 'equal to') {\n      myFilter = filteredPlanet\n        .filter((planeta) => Number(planeta[valueColumn]) === valueInput);\n    } else if (valueOperator === 'less than') {\n      myFilter = filteredPlanet.filter((planeta) => planeta[valueColumn] < valueInput);\n    } else {\n      myFilter = filteredPlanet.filter((planeta) => planeta[valueColumn] > valueInput);\n    }\n    setFilteredPlanet(myFilter);\n  };\n\n  return (\n    <form>\n      <div>\n        <input\n          type=\"text\"\n          ref={ planet }\n          onChange={ handleFilterPlanet }\n          data-testid=\"name-filter\"\n        />\n      </div>\n      <div>\n        <label>\n          Column\n          <select data-testid=\"column-filter\" ref={ column }>\n            <option value=\"population\">population</option>\n            <option value=\"orbital_period\">orbital_period</option>\n            <option value=\"diameter\">diameter</option>\n            <option value=\"rotation_period\">rotation_period</option>\n            <option value=\"surface_water\">surface_water</option>\n          </select>\n        </label>\n        <label>\n          Operator\n          <select>\n            <option>less than</option>\n            <option>more than</option>\n            <option>equal to</option>\n          </select>\n        </label>\n        <input type=\"text\" />\n        <button>FILTER</button>\n      </div>\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}