{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-starwars-planets-search/src/components/Filter.jsx\",\n  _s = $RefreshSig$();\n// componente que cria botao de excluir todos filtros e retornar o que era antes\n\nimport { useContext } from 'react';\nimport { contextApp } from '../context/ContextApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filters() {\n  _s();\n  const {\n    filters,\n    setFilters,\n    setFilteredPlanet,\n    planetData\n  } = useContext(contextApp);\n  const handleClick = filtered => {\n    const freshFilters = filters.filter(noMoreFilter => noMoreFilter !== filtered);\n    if (freshFilters) {\n      setFilters(freshFilters);\n      const teste = movieData.filter(movie => filters.some(_ref => {\n        let {\n          columnValue,\n          valueOperator,\n          valueInput\n        } = _ref;\n        if (movie[columnValue] !== 'unknown') {\n          switch (valueOperator) {\n            case 'maior que':\n              return movie[valueColumn] > valueInput;\n            case 'menor que':\n              return movie[valueColumn] < valueInput;\n            case 'igual a':\n              return movie[valueColumn] === valueInput;\n            default:\n              return true;\n          }\n        } else {\n          return true;\n        }\n      }));\n      setFilterMovieData(teste);\n    } else {\n      setFilterMovieData(movieData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filters.map(f => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"filter\",\n      children: [`${f.columnValue} ${f.valueOperator} ${f.inputValue}`, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(f),\n        children: \"excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, f.columnValue, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Filters, \"Spt/7csoDBcDZ7OCZJO1uhnn1FU=\");\n_c = Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["useContext","contextApp","Filters","filters","setFilters","setFilteredPlanet","planetData","handleClick","filtered","freshFilters","filter","noMoreFilter","teste","movieData","movie","some","columnValue","valueOperator","valueInput","valueColumn","setFilterMovieData","map","f","inputValue"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-starwars-planets-search/src/components/Filter.jsx"],"sourcesContent":["// componente que cria botao de excluir todos filtros e retornar o que era antes\n\nimport { useContext } from 'react';\nimport { contextApp } from '../context/ContextApp';\n\nexport default function Filters() {\n  const { filters, setFilters,\n    setFilteredPlanet, planetData } = useContext(contextApp);\n\n  const handleClick = (filtered) => {\n    const freshFilters = filters.filter((noMoreFilter) => noMoreFilter !== filtered);\n    if (freshFilters) {\n      setFilters(freshFilters);\n      const teste = movieData.filter((movie) => filters\n        .some(({ columnValue, valueOperator, valueInput }) => {\n          if (movie[columnValue] !== 'unknown') {\n            switch (valueOperator) {\n            case 'maior que':\n              return movie[valueColumn] > valueInput;\n            case 'menor que':\n              return movie[valueColumn] < valueInput;\n            case 'igual a':\n              return movie[valueColumn] === valueInput;\n            default:\n              return true;\n            }\n          } else {\n            return true;\n          }\n        }));\n      setFilterMovieData(teste);\n    } else {\n      setFilterMovieData(movieData);\n    }\n  };\n  return (\n    <div>\n      {filters.map((f) => (\n        <div key={ f.columnValue } data-testid=\"filter\">\n          { `${f.columnValue} ${f.valueOperator} ${f.inputValue}` }\n          <button onClick={ () => handleClick(f) }>excluir</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,uBAAuB;AAAC;AAEnD,eAAe,SAASC,OAAO,GAAG;EAAA;EAChC,MAAM;IAAEC,OAAO;IAAEC,UAAU;IACzBC,iBAAiB;IAAEC;EAAW,CAAC,GAAGN,UAAU,CAACC,UAAU,CAAC;EAE1D,MAAMM,WAAW,GAAIC,QAAQ,IAAK;IAChC,MAAMC,YAAY,GAAGN,OAAO,CAACO,MAAM,CAAEC,YAAY,IAAKA,YAAY,KAAKH,QAAQ,CAAC;IAChF,IAAIC,YAAY,EAAE;MAChBL,UAAU,CAACK,YAAY,CAAC;MACxB,MAAMG,KAAK,GAAGC,SAAS,CAACH,MAAM,CAAEI,KAAK,IAAKX,OAAO,CAC9CY,IAAI,CAAC,QAAgD;QAAA,IAA/C;UAAEC,WAAW;UAAEC,aAAa;UAAEC;QAAW,CAAC;QAC/C,IAAIJ,KAAK,CAACE,WAAW,CAAC,KAAK,SAAS,EAAE;UACpC,QAAQC,aAAa;YACrB,KAAK,WAAW;cACd,OAAOH,KAAK,CAACK,WAAW,CAAC,GAAGD,UAAU;YACxC,KAAK,WAAW;cACd,OAAOJ,KAAK,CAACK,WAAW,CAAC,GAAGD,UAAU;YACxC,KAAK,SAAS;cACZ,OAAOJ,KAAK,CAACK,WAAW,CAAC,KAAKD,UAAU;YAC1C;cACE,OAAO,IAAI;UAAC;QAEhB,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF,CAAC,CAAC,CAAC;MACLE,kBAAkB,CAACR,KAAK,CAAC;IAC3B,CAAC,MAAM;MACLQ,kBAAkB,CAACP,SAAS,CAAC;IAC/B;EACF,CAAC;EACD,oBACE;IAAA,UACGV,OAAO,CAACkB,GAAG,CAAEC,CAAC,iBACb;MAA2B,eAAY,QAAQ;MAAA,WAC1C,GAAEA,CAAC,CAACN,WAAY,IAAGM,CAAC,CAACL,aAAc,IAAGK,CAAC,CAACC,UAAW,EAAC,eACvD;QAAQ,OAAO,EAAG,MAAMhB,WAAW,CAACe,CAAC,CAAG;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,GAFhDA,CAAC,CAACN,WAAW;MAAA;MAAA;MAAA;IAAA,QAIzB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAxCuBd,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}