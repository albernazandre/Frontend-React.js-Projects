{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-01-16T20:50:26.532Z",
    "end": "2023-01-16T20:50:27.446Z",
    "duration": 914,
    "testsRegistered": 18,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 17,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "30c54a22-4941-43ea-943f-ad588435cd9b",
      "title": "",
      "fullFile": "cypress/e2e/project.cy.js",
      "file": "cypress/e2e/project.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fd1dd0c3-3f1e-457e-a539-829e4c4f1f44",
          "title": "Shopping Cart Project",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "eeedfad8-ce9a-4113-aa59-ec10d182add3",
              "title": "1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 657,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);",
                  "err": {
                    "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:5173/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:5173\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Shopping Cart Project`",
                    "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:5173/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:5173\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Shopping Cart Project`\n    at http://localhost:46769/__cypress/runner/cypress_runner.js:152359:82\n    at visitFailedByErr (http://localhost:46769/__cypress/runner/cypress_runner.js:151661:12)\n    at http://localhost:46769/__cypress/runner/cypress_runner.js:152358:11\n    at tryCatcher (http://localhost:46769/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46769/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:46769/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:46769/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:46769/__cypress/runner/cypress_runner.js:9431:18)\n    at _drainQueueStep (http://localhost:46769/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://localhost:46769/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46769/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://localhost:46769/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46769/__cypress/tests?p=cypress/e2e/project.cy.js:227:8)\n\nFrom Node.js Internals:\n  Error: connect ECONNREFUSED 127.0.0.1:5173\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1157:16)\n  ",
                    "diff": null
                  },
                  "uuid": "d04dc280-23bb-4748-a9df-1fcc29a7fabb",
                  "parentUUID": "eeedfad8-ce9a-4113-aa59-ec10d182add3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d04dc280-23bb-4748-a9df-1fcc29a7fabb"
              ],
              "pending": [],
              "skipped": [],
              "duration": 657,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "29ea4083-cd4b-422c-88ab-5f44448ff4aa",
              "title": "2 - Implemente a função fetchProductsList",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n  await fetchProductsList();\n  throw new Error('A função não retornou um erro');\n} catch (err) {\n  if (err.message === 'A função não retornou um erro') throw err;\n  expect(err.message).to.be.equal('Termo de busca não informado');\n}",
                  "err": {},
                  "uuid": "e10e7ce3-38d2-4861-887b-e26974097d3a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProductsList('computador');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/sites/MLB/search?q=computador');",
                  "err": {},
                  "uuid": "6d0fdf61-2a07-4992-b60b-34010a5177ce",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetchProductsList retorna os results da API",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna os results da API",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(fetchProductsList('computador')).should('be.deep.equal', results);",
                  "err": {},
                  "uuid": "d517e710-5808-4790-9bdc-8e3b4b2da3a1",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "e10e7ce3-38d2-4861-887b-e26974097d3a",
                "6d0fdf61-2a07-4992-b60b-34010a5177ce",
                "d517e710-5808-4790-9bdc-8e3b4b2da3a1"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4426b278-2acb-4989-90ae-42ff489d89ce",
              "title": "3 - Crie uma listagem de produtos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Listagem de produtos",
                  "fullTitle": "Shopping Cart Project 3 - Crie uma listagem de produtos Listagem de produtos",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(PRODUCT_SELECTOR).should('exist').should('have.length', results.length).get(PRODUCT_TITLE).each(($el, index) => {\n  expect($el.text()).to.be.equal(results[index].title);\n});",
                  "err": {},
                  "uuid": "692b6e85-03de-4534-b841-5fec98e4a97e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "692b6e85-03de-4534-b841-5fec98e4a97e"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fa8647cf-76d3-4b39-b0cf-0d9d9920073b",
              "title": "4 - Adicione um texto de `carregando` durante uma requisição à API",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "fullTitle": "Shopping Cart Project 4 - Adicione um texto de `carregando` durante uma requisição à API Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch = url => new Promise(resolve => {\n      setTimeout(() => {\n        fetchMock(url).then(resolve);\n      }, 1000);\n    });\n  }\n});\ncy.get(LOADING).should('be.visible').wait(3000);\ncy.get(LOADING).should('not.exist');",
                  "err": {},
                  "uuid": "4abf3e33-0e33-402b-9cf7-96759c7189f3",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "4abf3e33-0e33-402b-9cf7-96759c7189f3"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "95fe83b3-6e3d-4bd8-b10c-a950466cedbe",
              "title": "5 - Exiba um texto de `erro` caso a requisição à API falhe",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(ERRO).should('not.exist');",
                  "err": {},
                  "uuid": "284e86cf-8743-479d-8055-69531d63d3c4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch.callsFake(() => Promise.reject(new Error('API is down')));\n  }\n});\ncy.get(ERRO).should('be.visible');",
                  "err": {},
                  "uuid": "5baefaed-bf33-46c1-955e-686360f9e43c",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "284e86cf-8743-479d-8055-69531d63d3c4",
                "5baefaed-bf33-46c1-955e-686360f9e43c"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "24542208-7c9a-4581-a74a-9ef23355d988",
              "title": "6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);",
                  "err": {},
                  "uuid": "23755cf2-56ac-4a42-8f1a-d8041bbaacbf",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "23755cf2-56ac-4a42-8f1a-d8041bbaacbf"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c6b4c899-97dd-46ba-abb0-ca2b07b585c2",
              "title": "7 - Implemente a função `fetchProduct`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct().then(() => done(new Error('A função não retornou um erro'))).catch(err => {\n  expect(err.message).to.be.equal('ID não informado');\n  done();\n});",
                  "err": {},
                  "uuid": "b6717228-d7e7-43e6-b802-67329c150a7f",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct('MLB1405519561');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/items/MLB1405519561');",
                  "err": {},
                  "uuid": "a55940df-06ec-4a12-b75b-f376f6666ab3",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetchProduct retorna os dados do produto",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna os dados do produto",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const expectedResult = results.find(({\n  id\n}) => id === 'MLB1405519561');\ncy.wrap(fetchProduct('MLB1405519561')).should('be.deep.equal', _objectSpread(_objectSpread({}, expectedResult), {}, {\n  pictures\n}));",
                  "err": {},
                  "uuid": "694a2ee9-67b9-499a-980c-78d28cb90462",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "b6717228-d7e7-43e6-b802-67329c150a7f",
                "a55940df-06ec-4a12-b75b-f376f6666ab3",
                "694a2ee9-67b9-499a-980c-78d28cb90462"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7d29a79a-dfeb-4e15-9f8f-e55f97328955",
              "title": "8 - Adicione o produto ao carrinho de compras",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicione o produto ao carrinho de compras",
                  "fullTitle": "Shopping Cart Project 8 - Adicione o produto ao carrinho de compras Adicione o produto ao carrinho de compras",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(1000);\naddToCart(36);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);",
                  "err": {},
                  "uuid": "39db009e-6d36-457c-85f3-d94a420ef075",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "39db009e-6d36-457c-85f3-d94a420ef075"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "51bc18bf-238d-4607-b613-41525aa2f53e",
              "title": "9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "fullTitle": "Shopping Cart Project 9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const first = 36;\nconst last = 29;\naddToCart(first);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\naddToCart(last);\ncountCart(2);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncy.reload();\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncountCart(2);",
                  "err": {},
                  "uuid": "d44b6595-34ba-47a2-8bdb-f4258154be13",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "d44b6595-34ba-47a2-8bdb-f4258154be13"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1a919be3-9d60-4e01-955b-f4d1488b018c",
              "title": "10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(5);\ncheckPrice(results, [5]);\naddToCart(42);\ncheckPrice(results, [5, 42]);\naddToCart(36);\ncheckPrice(results, [5, 42, 36]);\naddToCart(15);\ncheckPrice(results, [5, 42, 36, 15]);\ncy.get(CART_PRODUCTS).children().eq(1).click();\ncheckPrice(results, [5, 36, 15]);",
                  "err": {},
                  "uuid": "5c04194a-6ece-43d7-9614-ce47e8c74cfa",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(15);\ncheckPrice(results, [15]);\naddToCart(45);\ncheckPrice(results, [15, 45]);\ncy.reload();\ncheckPrice(results, [15, 45]);\ncy.get(CART_PRODUCTS).children().first().click();\ncheckPrice(results, [45]);\ncy.reload();\ncheckPrice(results, [45]);",
                  "err": {},
                  "uuid": "63784339-786d-40bd-8d6e-b2efbbe67f63",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "5c04194a-6ece-43d7-9614-ce47e8c74cfa",
                "63784339-786d-40bd-8d6e-b2efbbe67f63"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f0c9ae89-53ee-4d3b-8271-e8d35b675546",
              "title": "11 - Implemente a função `getAddress`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica se o endereço é exibido após o CEP ser digitado",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se o endereço é exibido após o CEP ser digitado",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    cy.spy(win.Promise, 'any');\n  }\n});\ncy.get(CEP_INPUT).type('01001000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'Praça da Sé - Sé - São Paulo - SP');\ncy.window().its('Promise.any').should('be.called');",
                  "err": {},
                  "uuid": "576eee3f-3b7f-47b2-85d7-7610921f7e04",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(CEP_INPUT).type('00000000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'CEP não encontrado');",
                  "err": {},
                  "uuid": "e84c21f4-8287-4ac6-b1e3-003a1e7a768e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "576eee3f-3b7f-47b2-85d7-7610921f7e04",
                "e84c21f4-8287-4ac6-b1e3-003a1e7a768e"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}