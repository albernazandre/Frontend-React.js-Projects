{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybewallet/src/components/WalletForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // faz conexao de global state\nimport PropTypes from 'prop-types';\nimport { currAction, currFetch, saveExpensesAction } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WalletForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      value: '',\n      description: '',\n      curr: 'USD',\n      payment: 'Dinheiro',\n      category: 'Alimentação'\n    };\n    this.saveExpenses = event => {\n      const {\n        dispatch\n      } = this.props; // captura o dispatch que iremos utilizar via props\n      event.preventDefault();\n      dispatch(saveExpensesAction(this.state)); //  // dispara action tendo como parametro o state\n      this.setState({\n        // seta o novo estado\n        value: '',\n        description: '',\n        curr: 'USD',\n        payment: 'Dinheiro',\n        category: 'Alimentação'\n      });\n    };\n    this.changingAttributes = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n  componentDidMount() {\n    // componentDidMount dispara uma ou mais acoes apos o componente ser renderizado no DOM\n    const {\n      dispatch\n    } = this.props;\n    dispatch(currFetch()); // dispara a requisicao apos renderizacao de elementos DOM\n  }\n\n  // funcao que salva as despesas (seus valores relacionados como valor, descricao...)\n\n  render() {\n    const {\n      value,\n      description,\n      curr,\n      payment,\n      category\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"labbel\", {\n          children: [\"Value of Expense\", /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": \"value-input\",\n            value: value,\n            name: \"value\",\n            type: \"number\",\n            onChange: this.changingAttributes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          children: [\"Description of Expense\", /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": \"description-input\",\n            value: description,\n            name: \"description\",\n            type: \"text\",\n            onChange: this.changingAttributes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          htmlFor: \"selectCurrency\",\n          children: [\"Currency\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"selectCurrency\",\n            \"data-testid\": \"currency-input\",\n            name: \"curr\",\n            value: curr,\n            onChange: this.changingAttributes,\n            children: currencies.map(c =>\n            /*#__PURE__*/\n            // map sobre as moedas\n            _jsxDEV(\"option\", {\n              // propriedade do state curr (moeda)\n              value: currency // valor da propriedade curr\n              ,\n              children: c\n            }, currency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          children: [' ', \"Payment type\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"payment\",\n            name: \"payment\",\n            value: payment,\n            \"data-testid\": \"method-input\",\n            onChange: this.changingAttributes,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Dinheiro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de cr\\xE9dito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de d\\xE9bito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          children: [' ', \"Expense in:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            \"data-testid\": \"tag-input\",\n            value: category,\n            name: \"category\",\n            onChange: this.changingAttributes,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Alimenta\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Lazer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Trabalho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Transporte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Sa\\xFAde\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.saveExpenses,\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.instanceOf(Array).isRequired\n};\nconst mapStateToProps = state => ({\n  ...state.wallet\n});\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["React","connect","PropTypes","currAction","currFetch","saveExpensesAction","WalletForm","Component","state","value","description","curr","payment","category","saveExpenses","event","dispatch","props","preventDefault","setState","changingAttributes","target","name","type","checked","componentDidMount","render","currencies","map","c","currency","propTypes","func","isRequired","instanceOf","Array","mapStateToProps","wallet"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'; // faz conexao de global state\nimport PropTypes from 'prop-types';\nimport { currAction, currFetch, saveExpensesAction } from '../redux/actions';\n\nclass WalletForm extends React.Component {\n  state = {\n    value: '',\n    description: '',\n    curr: 'USD',\n    payment: 'Dinheiro',\n    category: 'Alimentação',\n  };\n\n  componentDidMount() { // componentDidMount dispara uma ou mais acoes apos o componente ser renderizado no DOM\n    const { dispatch } = this.props;\n    dispatch(currFetch()); // dispara a requisicao apos renderizacao de elementos DOM\n  }\n\n  // funcao que salva as despesas (seus valores relacionados como valor, descricao...)\n  saveExpenses = (event) => {\n    const { dispatch } = this.props; // captura o dispatch que iremos utilizar via props\n    event.preventDefault();\n    dispatch(saveExpensesAction(this.state)); //  // dispara action tendo como parametro o state\n    this.setState({ // seta o novo estado\n      value: '',\n      description: '',\n      curr: 'USD',\n      payment: 'Dinheiro',\n      category: 'Alimentação',\n    });\n  };\n\n  changingAttributes = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { value, description, curr, payment, category } = this.state;\n    const { currencies } = this.props;\n\n    return (\n      <div>\n        <form>\n          <labbel>\n            Value of Expense\n            <input\n              data-testid=\"value-input\"\n              value={ value }\n              name=\"value\"\n              type=\"number\"\n              onChange={ this.changingAttributes }\n            />\n          </labbel>\n          <labbel>\n            Description of Expense\n            <input\n              data-testid=\"description-input\"\n              value={ description }\n              name=\"description\"\n              type=\"text\"\n              onChange={ this.changingAttributes }\n            />\n          </labbel>\n          <labbel htmlFor=\"selectCurrency\">\n            Currency\n            <select\n              id=\"selectCurrency\"\n              data-testid=\"currency-input\"\n              name=\"curr\"\n              value={ curr }\n              onChange={ this.changingAttributes }\n            >\n              {currencies.map((c) => ( // map sobre as moedas\n                <option\n                  key={ currency } // propriedade do state curr (moeda)\n                  value={ currency } // valor da propriedade curr\n                >\n                  {c}\n                </option>\n              ))}\n            </select>\n          </labbel>\n          <labbel>\n            {' '}\n            Payment type\n            <select\n              id=\"payment\"\n              name=\"payment\"\n              value={ payment }\n              data-testid=\"method-input\"\n              onChange={ this.changingAttributes }\n            >\n              <option>Dinheiro</option>\n              <option>Cartão de crédito</option>\n              <option>Cartão de débito</option>\n            </select>\n          </labbel>\n          <labbel>\n            {' '}\n            Expense in:\n            <select\n              id=\"category\"\n              data-testid=\"tag-input\"\n              value={ category }\n              name=\"category\"\n              onChange={ this.changingAttributes }\n            >\n              <option>Alimentação</option>\n              <option>Lazer</option>\n              <option>Trabalho</option>\n              <option>Transporte</option>\n              <option>Saúde</option>\n            </select>\n          </labbel>\n          <button\n            type=\"submit\"\n            onClick={ this.saveExpenses }\n          >\n            Add Expense\n\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.instanceOf(Array).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  ...state.wallet,\n});\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}