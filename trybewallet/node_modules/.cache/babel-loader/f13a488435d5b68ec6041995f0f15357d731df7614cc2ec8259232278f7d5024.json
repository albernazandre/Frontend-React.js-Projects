{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybewallet/src/components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { actionSaveExpense, fetchOnCurr } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WalletForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.savingExpenses = async event => {\n      const {\n        dispatch\n      } = this.props;\n      event.preventDefault();\n      const curr = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const responseJSON = await curr.json();\n      this.setState({\n        exchangeRates: responseJSON\n      }, () => {\n        dispatch(actionSaveExpense(this.state));\n        this.setState({\n          value: '',\n          description: '',\n          exchangeRates: ''\n        });\n      });\n    };\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n  componentDidMount() {\n    // componentDidMount dispara a acao apos renderizar elementos DOM\n    const {\n      dispatch\n    } = this.props;\n    dispatch(fetchOnCurr());\n  }\n\n  // function que \n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formularioDespesa\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"labbel\", {\n          children: [\"Valor da Despesa\", /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": \"value-input\",\n            value: value,\n            name: \"value\",\n            type: \"number\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          children: [\"Descri\\xE7\\xE3o\", /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": \"description-input\",\n            value: description,\n            name: \"description\",\n            type: \"text\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          htmlFor: \"selectCurrency\",\n          children: [\"Moeda\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"selectCurrency\",\n            \"data-testid\": \"currency-input\",\n            name: \"currency\",\n            value: currency,\n            onChange: this.handleChange,\n            children: currencies.map(singleCurrency => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: singleCurrency,\n              children: singleCurrency\n            }, singleCurrency, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          htmlFor: \"payment\",\n          children: [' ', \"Forma de pagamento\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"payment\",\n            name: \"method\",\n            value: method,\n            \"data-testid\": \"method-input\",\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Dinheiro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de cr\\xE9dito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cart\\xE3o de d\\xE9bito\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"labbel\", {\n          htmlFor: \"category\",\n          children: [' ', \"Gasto feito em:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            \"data-testid\": \"tag-input\",\n            value: tag,\n            name: \"tag\",\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Alimenta\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Lazer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Trabalho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Transporte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Sa\\xFAde\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.savingExpenses,\n          children: \"Adicionar despesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.instanceOf(Array).isRequired\n};\nconst mapStateToProps = state => ({\n  ...state.wallet\n});\nexport default connect(mapStateToProps)(WalletForm);","map":{"version":3,"names":["React","Component","connect","PropTypes","actionSaveExpense","fetchOnCurr","WalletForm","state","value","description","currency","method","tag","savingExpenses","event","dispatch","props","preventDefault","curr","fetch","responseJSON","json","setState","exchangeRates","handleChange","target","name","type","checked","componentDidMount","render","currencies","map","singleCurrency","propTypes","func","isRequired","instanceOf","Array","mapStateToProps","wallet"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybewallet/src/components/WalletForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { actionSaveExpense, fetchOnCurr } from '../redux/actions';\n\nclass WalletForm extends Component {\n  // estado com as keys de caracteristicas da despesa\n  state = {\n    value: '',\n    description: '',\n    currency: 'USD',\n    method: 'Dinheiro',\n    tag: 'Alimentação',\n  };\n\n  componentDidMount() { // componentDidMount dispara a acao apos renderizar elementos DOM\n    const { dispatch } = this.props;\n    dispatch(fetchOnCurr());\n  }\n\n  // function que \n  savingExpenses = async (event) => {\n    const { dispatch } = this.props;\n    event.preventDefault();\n    const curr = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const responseJSON = await curr.json();\n    this.setState({ exchangeRates: responseJSON }, () => {\n      dispatch(actionSaveExpense(this.state));\n      this.setState({\n        value: '',\n        description: '',\n        exchangeRates: '',\n      });\n    });\n  };\n\n  handleChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies } = this.props;\n    return (\n      <div className=\"formularioDespesa\">\n        <form>\n          <labbel>\n            Valor da Despesa\n            <input\n              data-testid=\"value-input\"\n              value={ value }\n              name=\"value\"\n              type=\"number\"\n              onChange={ this.handleChange }\n            />\n          </labbel>\n          <labbel>\n            Descrição\n            <input\n              data-testid=\"description-input\"\n              value={ description }\n              name=\"description\"\n              type=\"text\"\n              onChange={ this.handleChange }\n            />\n          </labbel>\n          <labbel htmlFor=\"selectCurrency\">\n            Moeda\n            <select\n              id=\"selectCurrency\"\n              data-testid=\"currency-input\"\n              name=\"currency\"\n              value={ currency }\n              onChange={ this.handleChange }\n            >\n              {currencies.map((singleCurrency) => (\n                <option\n                  key={ singleCurrency }\n                  value={ singleCurrency }\n                >\n                  {singleCurrency}\n\n                </option>\n              ))}\n            </select>\n          </labbel>\n          <labbel htmlFor=\"payment\">\n            {' '}\n            Forma de pagamento\n            <select\n              id=\"payment\"\n              name=\"method\"\n              value={ method }\n              data-testid=\"method-input\"\n              onChange={ this.handleChange }\n            >\n              <option>Dinheiro</option>\n              <option>Cartão de crédito</option>\n              <option>Cartão de débito</option>\n            </select>\n          </labbel>\n          <labbel htmlFor=\"category\">\n            {' '}\n            Gasto feito em:\n            <select\n              id=\"category\"\n              data-testid=\"tag-input\"\n              value={ tag }\n              name=\"tag\"\n              onChange={ this.handleChange }\n            >\n              <option>Alimentação</option>\n              <option>Lazer</option>\n              <option>Trabalho</option>\n              <option>Transporte</option>\n              <option>Saúde</option>\n            </select>\n          </labbel>\n          <button\n            type=\"submit\"\n            onClick={ this.savingExpenses }\n          >\n            Adicionar despesa\n\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.instanceOf(Array).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  ...state.wallet,\n});\n\nexport default connect(mapStateToProps)(WalletForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}