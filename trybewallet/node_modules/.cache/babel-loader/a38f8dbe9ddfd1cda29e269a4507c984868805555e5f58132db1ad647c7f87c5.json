{"ast":null,"code":"import { EMAIL_ACTION } from '../actions';\nconst INITIAL_STATE = {\n  email: '' // string que armazena o email da pessoa usuária\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case EMAIL_ACTION:\n      return {\n        ...state,\n        email: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default user;","map":{"version":3,"names":["EMAIL_ACTION","INITIAL_STATE","email","user","state","action","type","payload"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybewallet/src/redux/reducers/user.js"],"sourcesContent":["import { EMAIL_ACTION } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '', // string que armazena o email da pessoa usuária\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case EMAIL_ACTION:\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,YAAY;AAEzC,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EAAE,CAAE;AACb,CAAC;;AAED,MAAMC,IAAI,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGH,aAAa;EAAA,IAAEI,MAAM;EACzC,QAAQA,MAAM,CAACC,IAAI;IACnB,KAAKN,YAAY;MACf,OAAO;QAAE,GAAGI,KAAK;QAAEF,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAC5C;MACE,OAAOH,KAAK;EAAC;AAEjB,CAAC;AAED,eAAeD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}