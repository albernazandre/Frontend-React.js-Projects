{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { actionEmail } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      btnDisabled: true,\n      email: '',\n      pass: ''\n    };\n    this.handleBtn = () => {\n      const {\n        history,\n        dispatch\n      } = this.props; // puxando history e o dispatch via props\n      const {\n        email\n      } = this.state; // capturando o estado a ser modificado\n      dispatch(actionEmail(email)); // dispara acao que modifica estado\n      history.push('/carteira'); // rota após o click no botao\n    };\n    this.changeInputs = _ref => {\n      let {\n        target\n      } = _ref;\n      const minPassLength = 4;\n      const {\n        email,\n        pass\n      } = this.state;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      }, () => {\n        if (this.verifyEmail(email) && pass.length > minPassLength) {\n          // verifica se e email e se ha valor minimo de caracteres na senha\n          this.setState({\n            btnDisabled: false\n          }); // habilitando botao caso condicoes sejam atendidas\n        } else {\n          this.setState({\n            btnDisabled: true\n          });\n        }\n      });\n    };\n    this.verifyEmail = email => {\n      const emailShape = /\\S+@\\S+\\.\\S+/;\n      return emailShape.test(email);\n    };\n  }\n  render() {\n    const {\n      pass,\n      email,\n      btnDisabled\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        type: \"email\",\n        \"data-testid\": \"email-input\",\n        name: \"email\",\n        onChange: this.changeInputs // modificacao do estado ocorre via funcao changeInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        \"data-testid\": \"password-input\",\n        value: pass,\n        name: \"pass\",\n        onChange: this.changeInputs // modificacao do estado ocorre via funcao changeInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: btnDisabled,\n        onClick: this.handleBtn // clique no botao chama a funcao handleBtn\n        ,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nexport default connect()(Login);","map":{"version":3,"names":["React","connect","PropTypes","actionEmail","Login","Component","state","btnDisabled","email","pass","handleBtn","history","dispatch","props","push","changeInputs","target","minPassLength","name","value","setState","verifyEmail","length","emailShape","test","render","propTypes","shape","func","isRequired"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-trybewallet/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { actionEmail } from '../redux/actions';\n\nclass Login extends React.Component {\n  state = {\n    btnDisabled: true,\n    email: '',\n    pass: '',\n  };\n\n  // funcoes que modificam o estado\n\n  handleBtn = () => {\n    const { history, dispatch } = this.props; // puxando history e o dispatch via props\n    const { email } = this.state; // capturando o estado a ser modificado\n    dispatch(actionEmail(email)); // dispara acao que modifica estado\n    history.push('/carteira'); // rota após o click no botao\n  };\n\n  changeInputs = ({ target }) => {\n    const minPassLength = 4;\n    const { email, pass } = this.state;\n    const { name, value } = target;\n    this.setState({ [name]: value }, () => {\n      if (this.verifyEmail(email) && pass.length > minPassLength) { // verifica se e email e se ha valor minimo de caracteres na senha\n        this.setState({ btnDisabled: false }); // habilitando botao caso condicoes sejam atendidas\n      } else {\n        this.setState({ btnDisabled: true });\n      }\n    });\n  };\n\n  // funcao de verificacao de email\n\n  verifyEmail = (email) => {\n    const emailShape = /\\S+@\\S+\\.\\S+/;\n    return emailShape.test(email);\n  };\n\n  render() {\n    const { pass, email, btnDisabled } = this.state;\n\n    return (\n      <div>\n        <input\n          value={ email }\n          type=\"email\"\n          data-testid=\"email-input\"\n          name=\"email\"\n          onChange={ this.changeInputs } // modificacao do estado ocorre via funcao changeInputs\n        />\n        <input\n          type=\"password\"\n          data-testid=\"password-input\"\n          value={ pass }\n          name=\"pass\"\n          onChange={ this.changeInputs } // modificacao do estado ocorre via funcao changeInputs\n        />\n        <button\n          type=\"button\"\n          disabled={ btnDisabled }\n          onClick={ this.handleBtn } // clique no botao chama a funcao handleBtn\n        >\n          Entrar\n        </button>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(Login);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,KAAK,SAASJ,KAAK,CAACK,SAAS,CAAC;EAAA;IAAA;IAAA,KAClCC,KAAK,GAAG;MACNC,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE;IACR,CAAC;IAAA,KAIDC,SAAS,GAAG,MAAM;MAChB,MAAM;QAAEC,OAAO;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;MAC1C,MAAM;QAAEL;MAAM,CAAC,GAAG,IAAI,CAACF,KAAK,CAAC,CAAC;MAC9BM,QAAQ,CAACT,WAAW,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9BG,OAAO,CAACG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC7B,CAAC;IAAA,KAEDC,YAAY,GAAG,QAAgB;MAAA,IAAf;QAAEC;MAAO,CAAC;MACxB,MAAMC,aAAa,GAAG,CAAC;MACvB,MAAM;QAAET,KAAK;QAAEC;MAAK,CAAC,GAAG,IAAI,CAACH,KAAK;MAClC,MAAM;QAAEY,IAAI;QAAEC;MAAM,CAAC,GAAGH,MAAM;MAC9B,IAAI,CAACI,QAAQ,CAAC;QAAE,CAACF,IAAI,GAAGC;MAAM,CAAC,EAAE,MAAM;QACrC,IAAI,IAAI,CAACE,WAAW,CAACb,KAAK,CAAC,IAAIC,IAAI,CAACa,MAAM,GAAGL,aAAa,EAAE;UAAE;UAC5D,IAAI,CAACG,QAAQ,CAAC;YAAEb,WAAW,EAAE;UAAM,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,MAAM;UACL,IAAI,CAACa,QAAQ,CAAC;YAAEb,WAAW,EAAE;UAAK,CAAC,CAAC;QACtC;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,KAIDc,WAAW,GAAIb,KAAK,IAAK;MACvB,MAAMe,UAAU,GAAG,cAAc;MACjC,OAAOA,UAAU,CAACC,IAAI,CAAChB,KAAK,CAAC;IAC/B,CAAC;EAAA;EAEDiB,MAAM,GAAG;IACP,MAAM;MAAEhB,IAAI;MAAED,KAAK;MAAED;IAAY,CAAC,GAAG,IAAI,CAACD,KAAK;IAE/C,oBACE;MAAA,wBACE;QACE,KAAK,EAAGE,KAAO;QACf,IAAI,EAAC,OAAO;QACZ,eAAY,aAAa;QACzB,IAAI,EAAC,OAAO;QACZ,QAAQ,EAAG,IAAI,CAACO,YAAc,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/B,eACF;QACE,IAAI,EAAC,UAAU;QACf,eAAY,gBAAgB;QAC5B,KAAK,EAAGN,IAAM;QACd,IAAI,EAAC,MAAM;QACX,QAAQ,EAAG,IAAI,CAACM,YAAc,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/B,eACF;QACE,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAGR,WAAa;QACxB,OAAO,EAAG,IAAI,CAACG,SAAW,CAAC;QAAA;QAAA,UAC5B;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEV;AACF;AAEAN,KAAK,CAACsB,SAAS,GAAG;EAChBf,OAAO,EAAET,SAAS,CAACyB,KAAK,CAAC;IACvBb,IAAI,EAAEZ,SAAS,CAAC0B,IAAI,CAACC;EACvB,CAAC,CAAC,CAACA,UAAU;EACbjB,QAAQ,EAAEV,SAAS,CAAC0B,IAAI,CAACC;AAC3B,CAAC;AAED,eAAe5B,OAAO,EAAE,CAACG,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}