{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nfunction useLocalStorage(key, initialValue) {\n  _s();\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n_s(useLocalStorage, \"pejLPuMwDMBPzGoeN1RF4QLHwaU=\");\nexport default useLocalStorage;","map":{"version":3,"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","window","item","localStorage","getItem","JSON","parse","error","console","log","setValue","value","valueToStore","Function","setItem","stringify"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-recipes-app/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,eAAe,CAACC,GAAG,EAAEC,YAAY,EAAE;EAAA;EAC1C;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,MAAM;IACnD,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE;MACjC,OAAOH,YAAY;IACrB;IAEA,IAAI;MACF;MACA,MAAMI,IAAI,GAAGD,MAAM,CAACE,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC;MAC7C;MACA,OAAOK,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAGJ,YAAY;IAC/C,CAAC,CAAC,OAAOS,KAAK,EAAE;MACd;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAOT,YAAY;IACrB;EACF,CAAC,CAAC;;EAEF;EACA;EACA,MAAMY,QAAQ,GAAIC,KAAK,IAAK;IAC1B,IAAI;MACF;MACA,MAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAQ,GAAGF,KAAK,CAACZ,WAAW,CAAC,GAAGY,KAAK;MAC3E;MACAX,cAAc,CAACY,YAAY,CAAC;MAC5B;MACA,IAAI,OAAOX,MAAM,KAAK,WAAW,EAAE;QACjCA,MAAM,CAACE,YAAY,CAACW,OAAO,CAACjB,GAAG,EAAEQ,IAAI,CAACU,SAAS,CAACH,YAAY,CAAC,CAAC;MAChE;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,OAAO,CAACR,WAAW,EAAEW,QAAQ,CAAC;AAChC;AAAC,GAvCQd,eAAe;AAyCxB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}