{"ast":null,"code":"import fetchDrinksRecomendations from '../../services/DrinksRecommendation';\nimport fetchMealsRecomendations from '../../services/MealRecommendation';\nimport fetchDrinkWithId from '../../services/FetchDrink';\nimport fetchMealWithId from '../../services/FetchMeal';\nexport const requestFetchDrinks = () => ({\n  type: 'REQUEST_DRINKS'\n});\nexport const requestFetchMeals = () => ({\n  type: 'REQUEST_MEALS'\n});\nexport const responseDrinksSucess = data => ({\n  type: 'RESPONSE_SUCESS_DRINKS',\n  data\n});\nexport const responseMealsSucess = data => ({\n  type: 'RESPONSE_SUCESS_MEALS',\n  data\n});\nexport const responseDrinksError = error => ({\n  type: 'RESPONSE_ERROR_DRINKS',\n  error\n});\nexport const responseMealsError = error => ({\n  type: 'RESPONSE_ERROR_MEALS',\n  error\n});\nexport function recommendationDrinks() {\n  return async dispatch => {\n    dispatch(requestFetchDrinks());\n    try {\n      const response = await fetchDrinksRecomendations();\n      dispatch(responseDrinksSucess(response));\n    } catch (error) {\n      dispatch(responseDrinksError(error));\n    }\n  };\n}\nexport function recommendationMeals() {\n  return async dispatch => {\n    dispatch(requestFetchMeals());\n    try {\n      const response = await fetchMealsRecomendations();\n      dispatch(responseMealsSucess(response));\n    } catch (error) {\n      dispatch(responseMealsError(error));\n    }\n  };\n}\nexport const SEARCH_INPUT = 'SEARCH_INPUT';\nexport const searchInputAction = payload => ({\n  type: SEARCH_INPUT,\n  payload\n});\nexport const SEND_DATA = 'SEND_DATA';\nexport const sendDataAction = payload => ({\n  type: SEND_DATA,\n  payload\n});\nexport const REQUEST_API = 'REQUEST_API';\nexport const requestApi = () => ({\n  type: REQUEST_API\n});\nexport const fetchApiIngredient = payload => async dispatch => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.meals));\n};\nexport const fetchApiName = payload => async dispatch => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.meals));\n};\nexport const fetchApiLetter = payload => async dispatch => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${payload}`);\n  const data = await response.json();\n  console.log(data, 'action');\n  dispatch(sendDataAction(data.meals));\n};\nexport const fetchApiIngredientDrinks = payload => async dispatch => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.drinks));\n};\nexport const fetchApiNameDrinks = payload => async dispatch => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.drinks));\n};\nexport const fetchApiLetterDrinks = payload => async dispatch => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.drinks));\n};\nexport const requesMealFetch = () => ({\n  type: 'REQUEST_FETCH_MEAL'\n});\nexport const requestDrinkFetch = () => ({\n  type: 'REQUEST_FETCH_DRINK'\n});\nexport const responseMealFetchSucess = data => ({\n  type: 'RESPONSE_FETCH_MEAL_SUCESS',\n  data\n});\nexport const responseDrinkFetchSucess = data => ({\n  type: 'RESPONSE_FETCH_DRINK_SUCESS',\n  data\n});\nexport const responseMealFetchError = error => ({\n  type: 'RESPONSE_FETCH_MEAL_ERROR',\n  error\n});\nexport const responseDrinkFetchError = error => ({\n  type: 'RESPONSE_FETCH_DRINK_ERROR',\n  error\n});\nexport function fetchMealUsingId(pathnameId) {\n  return async dispatch => {\n    dispatch(requesMealFetch());\n    try {\n      const response = await fetchMealWithId(pathnameId);\n      dispatch(responseMealFetchSucess(response));\n    } catch (error) {\n      dispatch(responseMealFetchError(error));\n    }\n  };\n}\nexport function fetchDrinkUsingId(pathnameId) {\n  return async dispatch => {\n    dispatch(requestDrinkFetch());\n    try {\n      const response = await fetchDrinkWithId(pathnameId);\n      dispatch(responseDrinkFetchSucess(response));\n    } catch (error) {\n      dispatch(responseDrinkFetchError(error));\n    }\n  };\n}","map":{"version":3,"names":["fetchDrinksRecomendations","fetchMealsRecomendations","fetchDrinkWithId","fetchMealWithId","requestFetchDrinks","type","requestFetchMeals","responseDrinksSucess","data","responseMealsSucess","responseDrinksError","error","responseMealsError","recommendationDrinks","dispatch","response","recommendationMeals","SEARCH_INPUT","searchInputAction","payload","SEND_DATA","sendDataAction","REQUEST_API","requestApi","fetchApiIngredient","fetch","json","meals","fetchApiName","fetchApiLetter","console","log","fetchApiIngredientDrinks","drinks","fetchApiNameDrinks","fetchApiLetterDrinks","requesMealFetch","requestDrinkFetch","responseMealFetchSucess","responseDrinkFetchSucess","responseMealFetchError","responseDrinkFetchError","fetchMealUsingId","pathnameId","fetchDrinkUsingId"],"sources":["/home/andre/Documentos/albernazandre.github.io/sd-028-a-project-recipes-app/src/redux/actions/index.js"],"sourcesContent":["import fetchDrinksRecomendations from '../../services/DrinksRecommendation';\nimport fetchMealsRecomendations from '../../services/MealRecommendation';\nimport fetchDrinkWithId from '../../services/FetchDrink';\nimport fetchMealWithId from '../../services/FetchMeal';\n\nexport const requestFetchDrinks = () => ({\n  type: 'REQUEST_DRINKS',\n});\n\nexport const requestFetchMeals = () => ({\n  type: 'REQUEST_MEALS',\n});\n\nexport const responseDrinksSucess = (data) => ({\n  type: 'RESPONSE_SUCESS_DRINKS',\n  data,\n});\n\nexport const responseMealsSucess = (data) => ({\n  type: 'RESPONSE_SUCESS_MEALS',\n  data,\n});\n\nexport const responseDrinksError = (error) => ({\n  type: 'RESPONSE_ERROR_DRINKS',\n  error,\n});\n\nexport const responseMealsError = (error) => ({\n  type: 'RESPONSE_ERROR_MEALS',\n  error,\n});\n\nexport function recommendationDrinks() {\n  return async (dispatch) => {\n    dispatch(requestFetchDrinks());\n    try {\n      const response = await fetchDrinksRecomendations();\n      dispatch(responseDrinksSucess(response));\n    } catch (error) {\n      dispatch(responseDrinksError(error));\n    }\n  };\n}\n\nexport function recommendationMeals() {\n  return async (dispatch) => {\n    dispatch(requestFetchMeals());\n    try {\n      const response = await fetchMealsRecomendations();\n      dispatch(responseMealsSucess(response));\n    } catch (error) {\n      dispatch(responseMealsError(error));\n    }\n  };\n}\n\nexport const SEARCH_INPUT = 'SEARCH_INPUT';\n\nexport const searchInputAction = (payload) => ({\n  type: SEARCH_INPUT,\n  payload,\n});\n\nexport const SEND_DATA = 'SEND_DATA';\n\nexport const sendDataAction = (payload) => ({\n  type: SEND_DATA,\n  payload,\n});\n\nexport const REQUEST_API = 'REQUEST_API';\n\nexport const requestApi = () => ({\n  type: REQUEST_API,\n});\n\nexport const fetchApiIngredient = (payload) => async (dispatch) => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.meals));\n};\n\nexport const fetchApiName = (payload) => async (dispatch) => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.meals));\n};\n\nexport const fetchApiLetter = (payload) => async (dispatch) => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${payload}`);\n  const data = await response.json();\n  console.log(data, 'action');\n  dispatch(sendDataAction(data.meals));\n};\n\nexport const fetchApiIngredientDrinks = (payload) => async (dispatch) => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.drinks));\n};\n\nexport const fetchApiNameDrinks = (payload) => async (dispatch) => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.drinks));\n};\n\nexport const fetchApiLetterDrinks = (payload) => async (dispatch) => {\n  dispatch(requestApi());\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${payload}`);\n  const data = await response.json();\n  dispatch(sendDataAction(data.drinks));\n};\n\nexport const requesMealFetch = () => ({\n  type: 'REQUEST_FETCH_MEAL',\n});\n\nexport const requestDrinkFetch = () => ({\n  type: 'REQUEST_FETCH_DRINK',\n\n});\n\nexport const responseMealFetchSucess = (data) => ({\n  type: 'RESPONSE_FETCH_MEAL_SUCESS',\n  data,\n});\n\nexport const responseDrinkFetchSucess = (data) => ({\n  type: 'RESPONSE_FETCH_DRINK_SUCESS',\n  data,\n});\n\nexport const responseMealFetchError = (error) => ({\n  type: 'RESPONSE_FETCH_MEAL_ERROR',\n  error,\n});\n\nexport const responseDrinkFetchError = (error) => ({\n  type: 'RESPONSE_FETCH_DRINK_ERROR',\n  error,\n});\n\nexport function fetchMealUsingId(pathnameId) {\n  return async (dispatch) => {\n    dispatch(requesMealFetch());\n    try {\n      const response = await fetchMealWithId(pathnameId);\n      dispatch(responseMealFetchSucess(response));\n    } catch (error) {\n      dispatch(responseMealFetchError(error));\n    }\n  };\n}\nexport function fetchDrinkUsingId(pathnameId) {\n  return async (dispatch) => {\n    dispatch(requestDrinkFetch());\n    try {\n      const response = await fetchDrinkWithId(pathnameId);\n      dispatch(responseDrinkFetchSucess(response));\n    } catch (error) {\n      dispatch(responseDrinkFetchError(error));\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}